name: ThurData Support Full Build

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release Tag (z.B. v1.3.9-thurdata)'
        required: true
      release_name:
        description: 'Release Name (z.B. ThurData Support 1.3.9)'
        required: true

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Rust installieren
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: System-Abh√§ngigkeiten installieren
        run: sudo apt-get update && sudo apt-get install -y build-essential cmake pkg-config libssl-dev libgtk-3-dev libayatana-appindicator3-dev libxcb-shape0-dev libxcb-xfixes0-dev  libxkbcommon-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev gstreamer1.0-tools gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly libglib2.0-dev libglib2.0-dev libdbus-1-dev libx11-dev libxcb1-dev libx11-xcb-dev  libxi-dev libxtst-dev libxrandr-dev libxinerama-dev  libxss-dev libxcursor-dev libxcomposite-dev libxdamage-dev libxext-dev libvulkan-dev libudev-dev 
      - name: Build erstellen
        run: cargo build --release
      - name: Pakete erzeugen
        run: |
          cargo install cargo-deb
          cargo deb
      - name: Artefakt hochladen
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-linux
          path: target/release/

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Rust installieren
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Vcpkg installieren
        uses: lukka/run-vcpkg@v11
        with:
            vcpkgGitCommitId: 'latest'
      - name: Opus via vcpkg installieren
        run: |
          ./vcpkg/vcpkg install opus:x64-windows
          ./vcpkg/vcpkg integrate install
      - name: Build erstellen
        run: cargo build --release
      - name: Artefakt hochladen
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows
          path: target/release/rustdesk.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Rust installieren
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Installiere Opus und libyuv Bibliotheken
        run: |
          brew install opus
          brew install libyuv
      - name: Build erstellen
        run: cargo build --release
      - name: Artefakt hochladen
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-macos
          path: target/release/rustdesk

  release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Artefakte herunterladen
        uses: actions/download-artifact@v4
      - name: GitHub Release erstellen
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.release_tag }}
          name: ${{ github.event.inputs.release_name }}
          draft: false
          prerelease: false
          files: |
            rustdesk-linux/rustdesk
            rustdesk-windows/rustdesk.exe
            rustdesk-macos/rustdesk
